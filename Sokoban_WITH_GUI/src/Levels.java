public class Levels {
    public int[][] getLevel(int level) {
        switch (level) {
            case 1:
                return  new int[][] {
                        {0, 0, 3, 3, 3, 3, 3, 0},
                        {3, 3, 3, 0, 0, 0, 3, 0},
                        {3, 0, 4, 0, 3, 0, 3, 3},
                        {3, 0, 3, 0, 0, 0, 0, 3},
                        {3, 0, 0, 0, 0, 3, 0, 3},
                        {3, 3, 0, 3, 0, 0, 0, 3},
                        {0, 3, 2, 0, 0, 3, 3, 3},
                        {0, 3, 3, 3, 3, 3, 0, 0}
                        //0 - empty space
                        //3 - wall
                        //2 - player
                        //4 - box
                };
            case 2:
                return new int[][] {
                        {0, 0, 3, 3, 3, 3, 3, 0},
                        {3, 3, 3, 0, 0, 0, 3, 0},
                        {3, 0, 4, 0, 3, 0, 3, 3},
                        {3, 0, 3, 0, 0, 0, 0, 3},
                        {3, 0, 0, 0, 0, 3, 0, 3},
                        {3, 3, 4, 3, 0, 0, 0, 3},
                        {0, 3, 2, 0, 0, 3, 3, 3},
                        {0, 3, 3, 3, 3, 3, 0, 0}
                };
            case 3:
                return new int[][] {
                        {0, 0, 3, 3, 3, 3, 3, 0},
                        {3, 3, 3, 0, 0, 0, 3, 0},
                        {3, 0, 4, 0, 3, 0, 3, 3},
                        {3, 0, 3, 0, 0, 0, 0, 3},
                        {3, 0, 0, 0, 0, 3, 0, 3},
                        {3, 3, 4, 3, 0, 4, 0, 3},
                        {0, 3, 2, 0, 0, 3, 3, 3},
                        {0, 3, 3, 3, 3, 3, 0, 0}
                };
            case 4:
                return new int[][] {
                        {0, 0, 0, 0, 3, 3, 3, 3},
                        {3, 3, 3, 3, 3, 0, 0, 3},
                        {3, 0, 0, 0, 4, 0, 0, 3},
                        {3, 0, 0, 0, 3, 0, 0, 3},
                        {3, 3, 0, 3, 3, 0, 3, 3},
                        {3, 0, 0, 0, 0, 0, 0, 3},
                        {3, 0, 2, 3, 0, 0, 0, 3},
                        {3, 0, 0, 3, 3, 3, 3, 3},
                        {3, 3, 3, 3, 0, 0, 0, 0}
                };
        }
        return null;
    }

    public int[][] getGround(int ground) {
        switch (ground) {
            case 1:
                return new int[][] {
                        {0, 0, 1, 1, 1, 1, 1, 0},
                        {1, 1, 1, 1, 1, 1, 1, 0},
                        {1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 1, 1, 1, 1, 7, 1, 1},
                        {1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 1, 1, 1, 1, 1, 1, 1},
                        {0, 1, 1, 1, 1, 1, 1, 1},
                        {0, 1, 1, 1, 1, 1, 0, 0}
                        //0 - empty space
                        //1 - ground
                        //7 - goal
                };
            case 2:
                return new int[][] {
                        {0, 0, 1, 1, 1, 1, 1, 0},
                        {1, 1, 1, 1, 1, 1, 1, 0},
                        {1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 1, 1, 1, 1, 7, 1, 1},
                        {1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 1, 1, 1, 7, 1, 1, 1},
                        {0, 1, 1, 1, 1, 1, 1, 1},
                        {0, 1, 1, 1, 1, 1, 0, 0}
                };
            case 3:
                return new int[][] {
                        {0, 0, 1, 1, 1, 1, 1, 0},
                        {1, 1, 1, 1, 1, 1, 1, 0},
                        {1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 1, 1, 1, 1, 7, 1, 1},
                        {1, 1, 7, 1, 1, 1, 1, 1},
                        {1, 1, 1, 1, 7, 1, 1, 1},
                        {0, 1, 1, 1, 1, 1, 1, 1},
                        {0, 1, 1, 1, 1, 1, 0, 0}
                };
            case 4:
                return new int[][] {
                        {0, 0, 0, 0, 1, 1, 1, 1},
                        {1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 1, 1, 7, 1, 1, 1, 1},
                        {1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 1, 1, 1, 1, 1, 1, 1},
                        {1, 1, 1, 1, 0, 0, 0, 0}
                };
        }
        return null;
    }
}
